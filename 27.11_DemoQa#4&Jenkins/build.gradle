plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.12.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

def allureVersion = "2.21.0"

repositories {
    mavenCentral()
}

allure {
    report {
        version.set(allureVersion)
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:7.7.0",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter-api:5.10.0",
            'com.codeborne:pdf-test:1.5.1',
            'com.codeborne:xls-test:1.4.3',
            'net.lingala.zip4j:zip4j:1.3.2',
            'com.github.javafaker:javafaker:1.0.2',
            'org.hamcrest:hamcrest-all:1.3',
            'org.assertj:assertj-core:3.19.0',
            'com.fasterxml.jackson.core:jackson-databind:2.10.3'
    )
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.1"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task demoqa(type: Test) {
    useJUnitPlatform {
        includeTags 'demoqa'
    }
}